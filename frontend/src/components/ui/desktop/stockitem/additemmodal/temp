
        {/* <select
          className="filter-select rd-corner stock-item-category"
          defaultValue={
            this.props.stockManageModalState === "create"
              ? "beer"
              : this.props.targetItem.categoryName
          }
          onChange={this.setCategory}
        >
          {this.props.categories.map((category: string) => (
            <option key={category} value={category}>
              {firstLetterCaps(category)}
            </option>
          ))}
        </select> */}

        <div className="stock-item-name-price">
          <input
            type="text"
            className="stock-item-name"
            value={this.state.itemName}
            placeholder="item name"
            onChange={this.setItemName}
          />

          <input
            type="number"
            disabled={
              this.props.stockManageModalState === "create" ? false : true
            }
            className="stock-item-price"
            value={this.state.currentPrice}
            placeholder="item price"
            onChange={this.setItemStartPrice}
          />
        </div>

        <input
          type="text"
          className="stock-item-description"
          value={this.state.itemDescription}
          placeholder="item description"
          onChange={this.setItemDescription}
        />

        {this.props.stockManageModalState === "create" ? (
          <button color="primary" onClick={this.create}>
            Create
          </button>
        ) : (
            <button color="primary" onClick={this.update}>
              Update
          </button>
          )}
        <button color="secondary" onClick={this.discard}>
          Discard
        </button>